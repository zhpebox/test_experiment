digraph cflow {

  main [shape=rectangle]
  register_output [shape=ellipse]
  sourcerc [shape=rectangle]
  parse_rc [shape=ellipse]
  parse_opt [shape=rectangle]
  add_name [shape=rectangle]
  append_to_list [shape=rectangle]
  alloc_cons [shape=rectangle]
  alloc_cons_from_bucket [shape=ellipse]
  alloc_new_bucket [shape=ellipse]
  init [shape=rectangle]
  init_lex [shape=rectangle]
  install [shape=rectangle]
  hash_symbol_hasher [shape=ellipse]
  hash_symbol_compare [shape=ellipse]
  init_parse [shape=rectangle]
  clearstack [shape=ellipse]
  source [shape=rectangle]
  yyrestart [shape=rectangle]
  yy_create_buffer [shape=rectangle]
  yy_flex_alloc [shape=ellipse]
  yy_init_buffer [shape=rectangle]
  yy_flush_buffer [shape=rectangle]
  yy_load_buffer_state [shape=ellipse]
  yyparse [shape=rectangle]
  nexttoken [shape=rectangle]
  get_token [shape=rectangle]
  yylex [shape=rectangle]
  yy_get_next_buffer [shape=rectangle]
  yy_get_previous_state [shape=ellipse]
  tokpush [shape=ellipse]
  parse_typedef [shape=rectangle]
  fake_struct [shape=rectangle]
  mark [shape=ellipse]
  putback [shape=ellipse]
  skip_struct [shape=rectangle]
  ident [shape=rectangle]
  lookup [shape=rectangle]
  restore [shape=ellipse]
  dcl [shape=rectangle]
  dirdcl [shape=rectangle]
  declare_type [shape=rectangle]
  undo_save_stack [shape=ellipse]
  cleanup_stack [shape=ellipse]
  parse_declaration [shape=rectangle]
  is_function [shape=rectangle]
  parse_function_declaration [shape=rectangle]
  parse_knr_dcl [shape=rectangle]
  parse_dcl [shape=rectangle]
  maybe_parm_list [shape=rectangle]
  parse_variable_declaration [shape=rectangle]
  save_stack [shape=rectangle]
  delete_parms [shape=rectangle]
  delete_parm_processor [shape=rectangle]
  declare [shape=rectangle]
  delete_symbol [shape=ellipse]
  get_symbol [shape=rectangle]
  finish_save_stack [shape=rectangle]
  save_token [shape=ellipse]
  skip_to [shape=rectangle]
  expression [shape=rectangle]
  func_body [shape=rectangle]
  move_parms [shape=rectangle]
  move_parm_processor [shape=ellipse]
  reference [shape=rectangle]
  add_reference [shape=rectangle]
  symbol_in_list [shape=ellipse]
  call [shape=rectangle]
  delete_autos [shape=rectangle]
  auto_processor [shape=rectangle]
  yywrap [shape=rectangle]
  yy_delete_buffer [shape=rectangle]
  yy_flex_free [shape=ellipse]
  delete_statics [shape=rectangle]
  globals_only [shape=ellipse]
  temp_processor [shape=ellipse]
  cleanup [shape=rectangle]
  cleanup_processor [shape=ellipse]
  output [shape=rectangle]
  set_level_mark [shape=ellipse]
  tree_output [shape=rectangle]
  collect_symbols [shape=rectangle]
  collect_processor [shape=rectangle]
  is_var [shape=rectangle]
  include_symbol [shape=ellipse]
  compare [shape=ellipse]
  scan_tree [shape=rectangle]
  begin [shape=rectangle]
  gnu_output_handler [shape=rectangle]
  direct_tree [shape=rectangle]
  print_symbol [shape=rectangle]
  print_symbol [shape=rectangle]
  print_level [shape=ellipse]
  print_function_name [shape=ellipse]
  newline [shape=rectangle]
  set_active [shape=ellipse]
  is_printable [shape=rectangle]
  is_last [shape=rectangle]
  clear_active [shape=ellipse]
  separator [shape=rectangle]
  end [shape=rectangle]
  main -> register_output [label="2 calls" fontsize="10"]
  main -> sourcerc [label="1 calls" fontsize="10"]
  main -> parse_opt [label="5 calls" fontsize="10"]
  main -> init [label="1 calls" fontsize="10"]
  main -> source [label="1 calls" fontsize="10"]
  main -> yyparse [label="1 calls" fontsize="10"]
  main -> cleanup [label="1 calls" fontsize="10"]
  main -> output [label="1 calls" fontsize="10"]
  sourcerc -> parse_rc [label="1 calls" fontsize="10"]
  parse_opt -> add_name [label="1 calls" fontsize="10"]
  add_name -> append_to_list [label="1 calls" fontsize="10"]
  append_to_list -> alloc_cons [label="1681 calls" fontsize="10"]
  alloc_cons -> alloc_cons_from_bucket [label="1685 calls" fontsize="10"]
  alloc_cons -> alloc_new_bucket [label="4 calls" fontsize="10"]
  init -> init_lex [label="1 calls" fontsize="10"]
  init -> init_parse [label="1 calls" fontsize="10"]
  init_lex -> install [label="27 calls" fontsize="10"]
  install -> hash_symbol_hasher [label="702 calls" fontsize="10"]
  install -> hash_symbol_compare [label="284 calls" fontsize="10"]
  init_parse -> clearstack [label="1 calls" fontsize="10"]
  source -> yyrestart [label="1 calls" fontsize="10"]
  yyrestart -> yy_create_buffer [label="1 calls" fontsize="10"]
  yyrestart -> yy_init_buffer [label="2 calls" fontsize="10"]
  yyrestart -> yy_load_buffer_state [label="2 calls" fontsize="10"]
  yy_create_buffer -> yy_flex_alloc [label="2 calls" fontsize="10"]
  yy_create_buffer -> yy_init_buffer [label="1 calls" fontsize="10"]
  yy_init_buffer -> yy_flush_buffer [label="3 calls" fontsize="10"]
  yy_flush_buffer -> yy_load_buffer_state [label="2 calls" fontsize="10"]
  yyparse -> clearstack [label="1 calls" fontsize="10"]
  yyparse -> nexttoken [label="84 calls" fontsize="10"]
  yyparse -> parse_typedef [label="3 calls" fontsize="10"]
  yyparse -> cleanup_stack [label="77 calls" fontsize="10"]
  yyparse -> parse_declaration [label="74 calls" fontsize="10"]
  nexttoken -> get_token [label="4466 calls" fontsize="10"]
  nexttoken -> tokpush [label="4466 calls" fontsize="10"]
  get_token -> yylex [label="4466 calls" fontsize="10"]
  yylex -> yy_load_buffer_state [label="1 calls" fontsize="10"]
  yylex -> yy_get_next_buffer [label="4 calls" fontsize="10"]
  yylex -> yy_get_previous_state [label="3 calls" fontsize="10"]
  yylex -> ident [label="1796 calls" fontsize="10"]
  yylex -> yywrap [label="1 calls" fontsize="10"]
  yy_get_next_buffer -> yyrestart [label="1 calls" fontsize="10"]
  parse_typedef -> nexttoken [label="3 calls" fontsize="10"]
  parse_typedef -> fake_struct [label="3 calls" fontsize="10"]
  parse_typedef -> putback [label="1 calls" fontsize="10"]
  parse_typedef -> dcl [label="3 calls" fontsize="10"]
  parse_typedef -> declare_type [label="3 calls" fontsize="10"]
  fake_struct -> nexttoken [label="2 calls" fontsize="10"]
  fake_struct -> tokpush [label="2 calls" fontsize="10"]
  fake_struct -> mark [label="3 calls" fontsize="10"]
  fake_struct -> putback [label="2 calls" fontsize="10"]
  fake_struct -> skip_struct [label="2 calls" fontsize="10"]
  fake_struct -> restore [label="2 calls" fontsize="10"]
  skip_struct -> nexttoken [label="35 calls" fontsize="10"]
  ident -> lookup [label="1796 calls" fontsize="10"]
  lookup -> hash_symbol_hasher [label="2784 calls" fontsize="10"]
  lookup -> hash_symbol_compare [label="4625 calls" fontsize="10"]
  dcl -> nexttoken [label="534 calls" fontsize="10"]
  dcl -> putback [label="166 calls" fontsize="10"]
  dcl -> dirdcl [label="162 calls" fontsize="10"]
  dirdcl -> nexttoken [label="386 calls" fontsize="10"]
  dirdcl -> putback [label="162 calls" fontsize="10"]
  dirdcl -> maybe_parm_list [label="61 calls" fontsize="10"]
  dirdcl -> skip_to [label="1 calls" fontsize="10"]
  declare_type -> install [label="3 calls" fontsize="10"]
  declare_type -> lookup [label="3 calls" fontsize="10"]
  declare_type -> undo_save_stack [label="3 calls" fontsize="10"]
  parse_declaration -> is_function [label="125 calls" fontsize="10"]
  parse_declaration -> parse_function_declaration [label="61 calls" fontsize="10"]
  parse_declaration -> parse_variable_declaration [label="64 calls" fontsize="10"]
  parse_declaration -> delete_parms [label="125 calls" fontsize="10"]
  is_function -> nexttoken [label="335 calls" fontsize="10"]
  is_function -> mark [label="125 calls" fontsize="10"]
  is_function -> restore [label="125 calls" fontsize="10"]
  parse_function_declaration -> lookup [label="38 calls" fontsize="10"]
  parse_function_declaration -> parse_knr_dcl [label="61 calls" fontsize="10"]
  parse_function_declaration -> func_body [label="38 calls" fontsize="10"]
  parse_knr_dcl -> parse_dcl [label="61 calls" fontsize="10"]
  parse_dcl -> putback [label="159 calls" fontsize="10"]
  parse_dcl -> dcl [label="159 calls" fontsize="10"]
  parse_dcl -> undo_save_stack [label="16 calls" fontsize="10"]
  parse_dcl -> save_stack [label="159 calls" fontsize="10"]
  parse_dcl -> declare [label="143 calls" fontsize="10"]
  maybe_parm_list -> nexttoken [label="121 calls" fontsize="10"]
  maybe_parm_list -> putback [label="51 calls" fontsize="10"]
  maybe_parm_list -> parse_declaration [label="51 calls" fontsize="10"]
  parse_variable_declaration -> nexttoken [label="16 calls" fontsize="10"]
  parse_variable_declaration -> tokpush [label="1 calls" fontsize="10"]
  parse_variable_declaration -> mark [label="96 calls" fontsize="10"]
  parse_variable_declaration -> putback [label="1 calls" fontsize="10"]
  parse_variable_declaration -> skip_struct [label="1 calls" fontsize="10"]
  parse_variable_declaration -> restore [label="3 calls" fontsize="10"]
  parse_variable_declaration -> parse_dcl [label="98 calls" fontsize="10"]
  parse_variable_declaration -> expression [label="15 calls" fontsize="10"]
  save_stack -> mark [label="159 calls" fontsize="10"]
  delete_parms -> delete_parm_processor [label="10653 calls" fontsize="10"]
  delete_parm_processor -> delete_symbol [label="2 calls" fontsize="10"]
  declare -> install [label="69 calls" fontsize="10"]
  declare -> undo_save_stack [label="92 calls" fontsize="10"]
  declare -> get_symbol [label="51 calls" fontsize="10"]
  declare -> finish_save_stack [label="51 calls" fontsize="10"]
  get_symbol -> install [label="118 calls" fontsize="10"]
  get_symbol -> lookup [label="946 calls" fontsize="10"]
  finish_save_stack -> save_token [label="286 calls" fontsize="10"]
  skip_to -> nexttoken [label="2 calls" fontsize="10"]
  expression -> nexttoken [label="3827 calls" fontsize="10"]
  expression -> putback [label="725 calls" fontsize="10"]
  expression -> reference [label="685 calls" fontsize="10"]
  expression -> call [label="210 calls" fontsize="10"]
  func_body -> nexttoken [label="729 calls" fontsize="10"]
  func_body -> cleanup_stack [label="729 calls" fontsize="10"]
  func_body -> parse_variable_declaration [label="32 calls" fontsize="10"]
  func_body -> expression [label="483 calls" fontsize="10"]
  func_body -> move_parms [label="38 calls" fontsize="10"]
  func_body -> delete_autos [label="126 calls" fontsize="10"]
  move_parms -> move_parm_processor [label="4553 calls" fontsize="10"]
  reference -> append_to_list [label="442 calls" fontsize="10"]
  reference -> add_reference [label="685 calls" fontsize="10"]
  reference -> symbol_in_list [label="954 calls" fontsize="10"]
  add_reference -> append_to_list [label="687 calls" fontsize="10"]
  add_reference -> get_symbol [label="895 calls" fontsize="10"]
  call -> append_to_list [label="282 calls" fontsize="10"]
  call -> add_reference [label="210 calls" fontsize="10"]
  call -> symbol_in_list [label="420 calls" fontsize="10"]
  delete_autos -> auto_processor [label="16852 calls" fontsize="10"]
  auto_processor -> delete_symbol [label="67 calls" fontsize="10"]
  yywrap -> yy_delete_buffer [label="1 calls" fontsize="10"]
  yywrap -> delete_statics [label="1 calls" fontsize="10"]
  yy_delete_buffer -> yy_flex_free [label="2 calls" fontsize="10"]
  delete_statics -> globals_only [label="1 calls" fontsize="10"]
  delete_statics -> temp_processor [label="175 calls" fontsize="10"]
  cleanup -> cleanup_processor [label="175 calls" fontsize="10"]
  output -> set_level_mark [label="1 calls" fontsize="10"]
  output -> tree_output [label="1 calls" fontsize="10"]
  tree_output -> lookup [label="1 calls" fontsize="10"]
  tree_output -> collect_symbols [label="1 calls" fontsize="10"]
  tree_output -> compare [label="458 calls" fontsize="10"]
  tree_output -> scan_tree [label="38 calls" fontsize="10"]
  tree_output -> begin [label="1 calls" fontsize="10"]
  tree_output -> direct_tree [label="38 calls" fontsize="10"]
  tree_output -> separator [label="38 calls" fontsize="10"]
  tree_output -> end [label="1 calls" fontsize="10"]
  collect_symbols -> collect_processor [label="350 calls" fontsize="10"]
  collect_processor -> is_var [label="350 calls" fontsize="10"]
  is_var -> include_symbol [label="350 calls" fontsize="10"]
  scan_tree -> scan_tree [label="27225 calls" fontsize="10"]
  begin -> gnu_output_handler [label="1 calls" fontsize="10"]
  gnu_output_handler -> print_symbol [label="7266 calls" fontsize="10"]
  direct_tree -> set_level_mark [label="27225 calls" fontsize="10"]
  direct_tree -> include_symbol [label="27263 calls" fontsize="10"]
  direct_tree -> direct_tree [label="27225 calls" fontsize="10"]
  direct_tree -> print_symbol [label="7266 calls" fontsize="10"]
  direct_tree -> newline [label="7266 calls" fontsize="10"]
  direct_tree -> set_active [label="7115 calls" fontsize="10"]
  direct_tree -> is_printable [label="27225 calls" fontsize="10"]
  direct_tree -> is_last [label="27225 calls" fontsize="10"]
  direct_tree -> clear_active [label="7115 calls" fontsize="10"]
  print_symbol -> gnu_output_handler [label="7266 calls" fontsize="10"]
  print_symbol -> print_level [label="7266 calls" fontsize="10"]
  print_symbol -> print_function_name [label="7266 calls" fontsize="10"]
  newline -> gnu_output_handler [label="7266 calls" fontsize="10"]
  is_printable -> include_symbol [label="85887 calls" fontsize="10"]
  is_last -> is_printable [label="62074 calls" fontsize="10"]
  separator -> gnu_output_handler [label="38 calls" fontsize="10"]
  end -> gnu_output_handler [label="1 calls" fontsize="10"]

}
